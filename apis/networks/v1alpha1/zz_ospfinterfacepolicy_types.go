/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type OspfInterfacePolicyObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type OspfInterfacePolicyParameters struct {

	// +kubebuilder:validation:Optional
	Annotation *string `json:"annotation,omitempty" tf:"annotation,omitempty"`

	// +kubebuilder:validation:Optional
	Cost *string `json:"cost,omitempty" tf:"cost,omitempty"`

	// +kubebuilder:validation:Optional
	Ctrl []*string `json:"ctrl,omitempty" tf:"ctrl,omitempty"`

	// +kubebuilder:validation:Optional
	DeadIntvl *string `json:"deadIntvl,omitempty" tf:"dead_intvl,omitempty"`

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Optional
	HelloIntvl *string `json:"helloIntvl,omitempty" tf:"hello_intvl,omitempty"`

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	NameAlias *string `json:"nameAlias,omitempty" tf:"name_alias,omitempty"`

	// +kubebuilder:validation:Optional
	NwT *string `json:"nwT,omitempty" tf:"nw_t,omitempty"`

	// +kubebuilder:validation:Optional
	PfxSuppress *string `json:"pfxSuppress,omitempty" tf:"pfx_suppress,omitempty"`

	// +kubebuilder:validation:Optional
	Prio *string `json:"prio,omitempty" tf:"prio,omitempty"`

	// +kubebuilder:validation:Optional
	RexmitIntvl *string `json:"rexmitIntvl,omitempty" tf:"rexmit_intvl,omitempty"`

	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-jet-aci/apis/root/v1alpha1.Tenant
	// +kubebuilder:validation:Optional
	TenantDn *string `json:"tenantDn,omitempty" tf:"tenant_dn,omitempty"`

	// +kubebuilder:validation:Optional
	TenantDnRef *v1.Reference `json:"tenantDnRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	TenantDnSelector *v1.Selector `json:"tenantDnSelector,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	XmitDelay *string `json:"xmitDelay,omitempty" tf:"xmit_delay,omitempty"`
}

// OspfInterfacePolicySpec defines the desired state of OspfInterfacePolicy
type OspfInterfacePolicySpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     OspfInterfacePolicyParameters `json:"forProvider"`
}

// OspfInterfacePolicyStatus defines the observed state of OspfInterfacePolicy.
type OspfInterfacePolicyStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        OspfInterfacePolicyObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// OspfInterfacePolicy is the Schema for the OspfInterfacePolicys API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,acijet}
type OspfInterfacePolicy struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              OspfInterfacePolicySpec   `json:"spec"`
	Status            OspfInterfacePolicyStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// OspfInterfacePolicyList contains a list of OspfInterfacePolicys
type OspfInterfacePolicyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []OspfInterfacePolicy `json:"items"`
}

// Repository type metadata.
var (
	OspfInterfacePolicy_Kind             = "OspfInterfacePolicy"
	OspfInterfacePolicy_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: OspfInterfacePolicy_Kind}.String()
	OspfInterfacePolicy_KindAPIVersion   = OspfInterfacePolicy_Kind + "." + CRDGroupVersion.String()
	OspfInterfacePolicy_GroupVersionKind = CRDGroupVersion.WithKind(OspfInterfacePolicy_Kind)
)

func init() {
	SchemeBuilder.Register(&OspfInterfacePolicy{}, &OspfInterfacePolicyList{})
}
